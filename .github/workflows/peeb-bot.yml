name: peeb-bot

on:
    push:
        branches: [develop, main]

env:
    APP_NAME: 'peeb-bot'

jobs:
    build:
        name: Build
        runs-on: windows-latest

        steps:
        - uses: actions/checkout@v2

        - uses: actions/setup-dotnet@v1
          with:
              dotnet-version: '5.0.x'

        - name: Build
          run: dotnet build -c Release

        - name: Test
          run: dotnet test './tests/Peeb.Bot.UnitTests'

        - name: Publish
          run: dotnet publish './src/Peeb.Bot' -c Release -o './publish/App_Data/Jobs/Continuous/${{env.APP_NAME}}'

        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
              name: ${{env.APP_NAME}}
              path: './publish'

    deploy-develop:
        name: Deploy develop
        if: github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
        runs-on: windows-latest
        needs: build
        environment:
            name: 'develop'
            url: ${{steps.deploy.outputs.webapp-url}}

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v2
              with:
                  name: ${{env.APP_NAME}}

            - name: Deploy
              id: deploy
              uses: azure/webapps-deploy@v2
              with:
                  app-name: ${{env.APP_NAME}}
                  slot-name: 'develop'
                  publish-profile: ${{secrets.DEVELOP_PUBLISH_PROFILE}}
                  package: .

    deploy-main:
        name: Deploy main
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        runs-on: windows-latest
        needs: build
        environment:
            name: 'main'
            url: ${{steps.deploy.outputs.webapp-url}}

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v2
              with:
                  name: ${{env.APP_NAME}}

            - name: Deploy
              id: deploy
              uses: azure/webapps-deploy@v2
              with:
                  app-name: ${{env.APP_NAME}}
                  slot-name: 'main'
                  publish-profile: ${{secrets.MAIN_PUBLISH_PROFILE}}
                  package: .
